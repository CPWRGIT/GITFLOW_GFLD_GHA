name: code-pipeline-sync-local


on: 
  push:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Proceed'
        required: true
        default: 'Yes'
        type: choice
        options:
          - Yes
          - No

jobs:
  feature-branch-build:
   if: (startsWith(github.ref, 'refs/heads/feature/'))
   runs-on: [self-hosted]
   env:
      Win_Topaz_Location: 'C:\TWB-230101\WorkbenchCLI'
   steps:
      - name: checkout step
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}      
      - name: sync step
        uses: bmc-compuware/ispw-sync-local@ZENG-318739
        id: sync
        with:
          host: 'cwcc.bmc.com'
          port: 16196
          uid: 'PFHMKS0'
          #pass: ${{ secrets.TSO_TOKEN }}
          pass: 'gocwcc72'
          runtimeConfiguration: 'ICCGA'
          stream: 'GITFLOW'
          application: 'GITFLOWD'
          subAppl: 'GITFLOWD'
          checkoutLevel: 'FEAT'
          gitUid: 'msingh9999'
          #gitToken:  ${{ secrets.GH_TOKEN }}
          gitToken: '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'
          winTopazPath: ${{ env.Win_Topaz_Location }}
          containerCreation: 'per-branch'
          showEnv: true
          assignmentPrefix: 'GFLD'
          ispwConfigPath: 'GenApp_MainframeCore\ispwconfig.yml'
      
      - name: Build
        uses: bmc-compuware/ispw-build@v1
        id: build
        with:
          ces_url: 'http://aus-bdc-cwcc.bmc.com:2020/'
          ces_token: ${{ secrets.CES_TOKEN }}
          srid: 'ispw'
          runtime_configuration: 'ICCGA'
          build_automatically: ${{ steps.sync.outputs.automaticBuildJson }}
      - name: Get the number of build failures
        run: echo "The number of build failures is ${{ steps.build.outputs.generate_failed_count }}"

      - name: Run Unit Tests
        run: echo "Ran Unit Tests successfully"  

  release-branch-build:
   if: (startsWith(github.ref, 'refs/heads/release/'))
   runs-on: [self-hosted]
   env:
    Win_Topaz_Location: 'C:\TWB-230101\WorkbenchCLI'
   steps:
      - name: checkout step
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          
      - name: Sync code 
        shell: pwsh
        run: |
         $currentTag = (git tag --sort=-refname).Split("`n")[0].Trim()
         $previousTag = (git tag --sort=-refname).Split("`n")[1].Trim()
            
         $fromCommit = (git rev-list -1 $previousTag)
         $toCommit = (git rev-parse --verify HEAD)
            
         $currentCommit  = $toCommit
         $previousCommit = $fromCommit
            

         cmd.exe /c "${{ env.Win_Topaz_Location }}\IspwCLI.bat" -operation syncGitToIspw -gitLocalPath '.\' -gitBranch 'release\vGH.00.01' -host "cwcc.bmc.com" -port  16196 -id "PFHMKS0" -pass "gocwcc72" -protocol None -code 1047 -timeout 0 -ispwServerConfig "iccga" -ispwConfigPath "GenApp_MainframeCore\ispwconfig-nosb.yml" -ispwServerStream "GITFLOW" -ispwServerApp "GITFLOWD" -ispwCheckoutLevel "RLSE" -ispwContainerCreation "per-branch" -assignmentPrefix "GFLD"-gitRepoUrl "https://github.com/CPWRGIT/GITFLOW_GFLD_GHA.git" -gitFromHash $previousCommit -gitCommit $currentCommit 
    
      - name: Build
        uses: bmc-compuware/ispw-build@v1
        id: build
        with:
          ces_url: 'http://aus-bdc-cwcc.bmc.com:2020/'
          ces_token: ${{ secrets.CES_TOKEN }}
          srid: 'ispw'
          runtime_configuration: 'ICCGA'
          build_automatically: ${{ steps.sync.outputs.automaticBuildJson }}
          
      - name: Get the number of build failures
        run: echo "The number of build failures is ${{ steps.build.outputs.generate_failed_count }}"

      - name: Manual Intervention
        run: echo "selected to ${{ github.event.inputs.environment }} choice"
             
      - name: Run Tests
        run: echo "Ran Tests successfully!"
      
      - name: Promote to Pre-Prod
        run: echo "Promotion to Pre Prod successful!"

      - name: Run User Acceptance Tests
        run: echo "Ran User Aceptance tests successfully!" 

      - name: Promote to Prod
        run: echo "Promotion to Prod successful!"
